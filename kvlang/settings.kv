## WeatherFlow PiConsole: Raspberry Pi Python console for WeatherFlow Tempest
## and Smart Home Weather stations.
## Copyright (C) 2018-2023 Peter Davis

## This program is free software: you can redistribute it and/or modify it under
## the terms of the GNU General Public License as published by the Free Software
## Foundation, either version 3 of the License, or (at your option) any later
## version.

## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
## details.

## You should have received a copy of the GNU General Public License along with
## this program. If not, see <http://www.gnu.org/licenses/>.

## =============================================================================
## CUSTOM MenuSidebar
## =============================================================================
<-MenuSidebar>:
    size_hint_x: None
    width: min(dp(200*app.scaleFactor), dp(350))
    buttons_layout: menu
    close_button: button
    GridLayout:
        pos: root.pos
        cols: 1
        id: menu
        padding: 5

        canvas.after:
            Color:
                rgb: .2, .2, .2
            Rectangle:
                pos: self.right - 1, self.y
                size: 1, self.height

    Button:
        text: 'Close'
        id: button
        size_hint: None, None
        width: root.width - dp(20*app.scaleFactor)
        height: max(50, self.texture_size[1] + dp(20))
        pos: root.x + dp(10*app.scaleFactor), root.y + dp(10)
        font_size: sp(15*app.scaleFactor)

## =============================================================================
## CUSTOM SettingItem
## =============================================================================
<-SettingItem>:
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: u'{0}\n[size={1}sp][color=999999]{2}[/color][/size]'.format(root.title or '', str(13*app.scaleFactor), root.desc or '')
            font_size: sp(15*app.scaleFactor)
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

## =============================================================================
## CUSTOM SettingsPanel
## =============================================================================
<-SettingsPanel>:
    spacing: 5
    padding: 5
    size_hint_y: None
    height: self.minimum_height

    Label:
        size_hint_y: None
        text: root.title
        text_size: self.width - 32, None
        height: max(50, self.texture_size[1] + 20)
        color: (.5, .5, .5, 1)
        font_size: sp(15*app.scaleFactor)

        canvas.after:
            Color:
                rgb: .2, .2, .2
            Rectangle:
                pos: self.x, self.y - 2
                size: self.width, 1

## =============================================================================
## CUSTOM SettingSidebarLabel
## =============================================================================
<SettingSidebarLabel>:
    size_hint: 1, None
    text_size: self.width - 32, None
    height: self.texture_size[1] + dp(20)
    font_size: sp(15*app.scaleFactor)
    canvas.before:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., int(self.selected)
        Rectangle:
            pos: self.pos
            size: self.size

## =============================================================================
## CUSTOM SettingString
## =============================================================================
<SettingString>:
    Label:
        text: root.value or ''
        pos: root.pos
        font_size: sp(15*app.scaleFactor)

## =============================================================================
## CUSTOM SettingBoolean
## =============================================================================
<SettingBoolean>:
    Switch:
        text: 'Boolean'
        pos: root.pos
        active: bool(root.values.index(root.value)) if root.value in root.values else False
        on_active: root.value = root.values[int(args[1])]

## =============================================================================
## CUSTOM SettingOptions
## =============================================================================
<SettingOptions>:
    Label:
        text: root.value or ''
        pos: root.pos
        font_size: sp(15*app.scaleFactor)

## =============================================================================
## CUSTOM SettingPath
## =============================================================================
<SettingPath>:
    Label:
        text: root.value or ''
        pos: root.pos
        font_size: sp(15*app.scaleFactor)
